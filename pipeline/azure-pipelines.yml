# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  batch: true
  branches:
    include:
    - master

resources:
  repositories:
  - repository: cnp-azuredevops-libraries
    type: github
    ref: refs/heads/master
    name: hmcts/cnp-azuredevops-libraries
    endpoint: 'hmcts'

pool:
  vmImage: "ubuntu-latest"

variables:
  terraformVersion: 0.14.5
  timeoutInMinutes: 60
  agentPool: 'ubuntu-20.04'
  build: $(Build.BuildNumber)
  isMaster: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]
  connectedServiceName: DCD-CFT-Sandbox
  keyVaultName: infra-vault-sandbox
  secretsFilter: azure-devops-sp-token
  project: application

parameters:
  - name: environments
    displayName: Environment to run
    type: object
    default:
      - deployment: 'neuvector'
        environment: 'stg'
        dependsOn: 'Precheck'
      - deployment: 'neuvector'
        environment: 'test'
        dependsOn: 'Precheck'
      - deployment: 'neuvector'
        environment: 'dev'
        dependsOn: 'Precheck'
      - deployment: 'neuvector'
        environment: 'ithc'
        dependsOn: 'Precheck'
      - deployment: 'neuvector'
        environment: 'prod'
        dependsOn: 'Precheck'

  - name: location
    displayName: Location
    type: string
    default: 'UK South'
    values:
      - 'UK South'
      - 'UK West'

stages:
  - stage: Precheck
    jobs:
      - job:
        timeoutInMinutes: ${{ variables.timeoutInMinutes }}
        steps:
          - template: steps/terraform-precheck.yaml@cnp-azuredevops-libraries
            parameters:
              keyvaultName: "infra-vault-nonprod"
              keyvaultSecret: "azure-devops-sp-token"
              serviceConnection: "DCD-CFT-Sandbox"

  - ${{ each parameter in parameters.environments }}:
    - stage: ${{ parameter.environment }}
      displayName: ${{ parameter.environment }}
      dependsOn: ${{ parameter.dependsOn }}
      jobs:
        - job:
          pool:
            vmImage: ${{ variables.agentPool }}
          steps:
            - template: steps/terraform.yaml@cnp-azuredevops-libraries
              parameters:
                environment: ${{ parameter.environment }}
                location: ${{ parameters.location }}
                stack: ${{ parameter.deployment }}
                project: ${{ variables.project }}
                tfversion: ${{ variables.terraformVersion}}
                serviceConnection: "OPS-APPROVAL-GATE-${{ upper(parameter.environment) }}-ENVS"
