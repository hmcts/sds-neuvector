# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  batch: true
  branches:
    include:
    - master

variables:
  terraformVersion: 0.14.5
  timeoutInMinutes: 60
  agentPool: 'ubuntu-18.04'
  build: $(Build.BuildNumber)
  isMaster: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]
  connectedServiceName: DCD-CFT-Sandbox
  keyVaultName: infra-vault-sandbox
  secretsFilter: azure-devops-token
  project: application

parameters:
  - name: environments
    displayName: Environment to run
    type: object
    default:
      - deployment: 'neuvector'
        environment: 'sbox'
        dependsOn: 'Precheck'    

  - name: location
    displayName: Location
    type: string
    default: 'UK South'
    values:
      - 'UK South'
      - 'UK West'

stages:
  - stage: Precheck
    jobs:
      - template: templates/precheck/precheck.yaml
        parameters:
          agentPool: ${{ variables.agentPool }} 
          timeoutInMinutes: ${{ variables.timeoutInMinutes}}
          terraformVersion: ${{ variables.terraformVersion}}
          connectedServiceName: ${{ variables.connectedServiceName }}
          keyVaultName: ${{ variables.keyVaultName }}
          secretsFilter: ${{ variables.secretsFilter }}

  - ${{ each parameter in parameters.environments }}:
    - stage: ${{ parameter.environment }}
      displayName: ${{ parameter.environment }}
      dependsOn: ${{ parameter.dependsOn }}
      jobs:
        - job:
          pool:
            vmImage: ${{ variables.agentPool }}
          steps:
            - template: templates/terraform/terraform.yaml
              parameters:
                environment: ${{ parameter.environment }}
                location: ${{ parameters.location }}
                stack: ${{ parameter.deployment }}
                project: ${{ variables.project }}
                tfversion: ${{ variables.terraformVersion}}
                serviceConnection: "OPS-APPROVAL-GATE-${{ upper(parameter.environment) }}-ENVS"